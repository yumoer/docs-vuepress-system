(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{251:function(t,n,a){"use strict";a.r(n);var e=a(2),s=Object(e.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"css问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#css问题"}},[t._v("#")]),t._v(" CSS问题")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("样式表的组成\n \t样式表\n \t规则\n \t选择器+声明块\n \t声明\n \tcss属性名+css属性值的键值对\nCSS的全称是什么\n \tcascading style sheets\n浏览器读取渲染css的顺序？\n \t从右向左，方便快捷匹配\n")])])]),n("h2",{attrs:{id:"基本选择器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基本选择器"}},[t._v("#")]),t._v(" 基本选择器")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v(" 通配符选择器 - *\n 元素选择器 - 元素名\n 类选择器 - .\n ID选择器 - #\n 后代选择器 - 空格\n")])])]),n("h2",{attrs:{id:"基本选择器的扩展"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基本选择器的扩展"}},[t._v("#")]),t._v(" 基本选择器的扩展")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v(" 子元素选择器 - >\n 相邻兄弟选择器 - +\n 通用兄弟选择器 - ~\n 选择器分组 - ，（结合符）\n")])])]),n("h2",{attrs:{id:"属性选择器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#属性选择器"}},[t._v("#")]),t._v(" 属性选择器")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v(" 存在和值属性选择器\n \t[attr]:该选择器包含attr属性的所有元素。不论attr的值为何\n\t[attr=val]:该选择器仅选择attr属性被赋值为val的所有元素\n\t[attr~=val]:表示带有以attr命名的属性的元素，并且该属性是一个以空格作为分隔的值列表，其中至少一个值为val。\t\t \n 子串值属性选择器\n\t[attr|=val]:选择attr属性的值是val（包括val）或以val-开头的元素。\n\t[attr^=val]:选择attr属性的值以val开头（包括val）的元素\n\t[attr$=val]:选择attr属性的值以val结尾(包括val)的元素\n\t[attr*=val]:选择attr属性的值包含字符串val的元素。\n")])])]),n("h2",{attrs:{id:"属性的继承属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#属性的继承属性"}},[t._v("#")]),t._v(" 属性的继承属性")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v(" color： 可继承属性\n border-color： 非继承属性\n")])])]),n("h2",{attrs:{id:"伪类与伪元素选择器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#伪类与伪元素选择器"}},[t._v("#")]),t._v(" 伪类与伪元素选择器")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v(" 链接伪类 - 注意：:link，:visited,:target是作用于链接元素的\n\t:link - 表示作为超链接，用于选取设置未被访问的链接\n\t:visited - 表示作为超链接，用于选取设置已被访问的链接\n\t:target - 代表一个特殊的元素，可用于选取当前活动的目标元素\n\n 动态伪类 - 注意：:hover,:active基本可以作用于所有元素\n\t:hover - 表示悬浮在元素上\n\t:active - 表示匹配被用户激活的元素（点击按住时）\n\n\t链接a顺序 - lin1k visited hover  active\n\t\t由于a标签的:link和:visited可以覆盖了所有a标签的状态，所以当:link,:visited,:hover,:active同时出现在a标签身上时:link和:visited不能放到最后。\n\t隐私与:visited选择器\n\t\t只有下列的属性才能被应用到已访问链接；\n\t\tcolor、backgrourd-color、border-color\n\n 表单相关伪类 \n\t:enabled - 匹配可编辑的表单\n\t:disabled - 匹配被禁用的表单\n\t:checkbox - 匹配被选中的表单\n\t:focus - 匹配获焦的表单\n\t\n 结构性伪类\n\t#wrap ele:nth-child(index) - 表示匹配#wrap中第index的子元素 这个子元素必须是ele\n        \tindex可以为变量n(只能是n，0-正无穷):n 可以是数字、关键词或公式\n        \tindex可以为even odd:Odd 和 even 是可用于匹配下标是奇数或偶数的子元素的关键词（第一个子元素的下标是 1）。\n            :nth-child和:nth-of-type有一个很重要的区别:nth-of-type以元素为中心!\n\t:nth-child（index）系列 - 匹配属于其父元素的指定类型的第 N 个子元素，不论元素的类型\n\t\t:first-child - 用于选取属于其父元素指定类型的第一个子元素的元素\n\t\t:last-child - 用于选取属于其父元素指定类型的最后一个子元素的元素\n\t\t:nth-last-child(index) - 匹配属于其父元素指定类型的倒数第 N 个子元素，不论元素的类型\n\t\t:only-child - 匹配属于其父元素制定类型的唯一的子元素\n\n\t#wrap ele:nth-of-type(index) - 表示匹配#wrap中第index的ele子元素\n\t:nth-of-type（index）系列:以元素为伪类 - 匹配属于父元素的特定类型的第N个子元素的元素\n\t\t:first-of-type - 匹配属于父元素的特定类型的第一个子元素的元素\n\t\t:last-of-type - 匹配属于父元素的特定类型的最后一个子元素的元素\n\t\t:nth-last-type - 匹配属于父元素的特定类型的倒数第N个子元素的元素\n\t\t:only-of-type - 匹配属于父元素的特定类型的唯一一个子元素的元素\n\t:not - 不选取指定类型的子元素\n\t:empty - 内容必须是空的，有空格都不行\n\n 伪元素\n\t::after - 在被选元素的内容前面插入内容\n\t::before - 在被选元素的内容后面插入内容\n\t::first-letter - 用于选取指定选择器的首字母\n\t::first-line - 用于选取指定选择器的首行\n\t::selection - 匹配被用户选取的元素部分\n")])])]),n("h2",{attrs:{id:"只有after和before两个伪元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#只有after和before两个伪元素"}},[t._v("#")]),t._v(" 只有after和before两个伪元素")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("after - 清除浮动\nbefore - **\n")])])]),n("h2",{attrs:{id:"css的声明优先级"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#css的声明优先级"}},[t._v("#")]),t._v(" CSS的声明优先级")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v('选择器的特殊性：由选择器本身的组件确定，特殊性值表述为4个部分，如0，0，0，0\n\t1.对于选择器中给定的ID属性值，加0，1，0，0\n\t2.对于选择器中给定的各个类属性，属性选择，或伪类。加0，0，1，0\n\t3.对于选择器中的给定的各个元素和伪元素，加0，0，0，1\n\t4.通配符选择器的特殊性为0，0，0，0\n\t5.结合符对选择器特殊性没有一点贡献\n\t6.内联声明的特殊性都是1，0，0，0\n\t7.继承没有特殊性\n特殊性特点：\n\t1，0，0，0大于所有以0开头的特殊性（不进位）\n\t选择器的特殊性最终都会授予给其对应的声明\n\t如果多个规则与同一个元素匹配，而且有些声明互相冲突时，特殊性越大的越占优势\n注意：id选择器和属性选择器\n\tdiv[id="test"](0,0,1,1)  和  #test(0,1,0,0)\n重要声明：某些声明比较重要时，允许在这些声明的结束分号之前插入！important来标志\n继承：继承没有特殊性，甚至连0特殊性都没有，0特殊性要比无特殊性来的强\n来源：\n\tcss样式的来源有三种：程序员、用户、浏览器\n权重：用户的重要声明>程序员的重要声明>程序员的正常声明>用户的正常声明>浏览器的声明\n层叠：\n\t1.找出所有相关的规则，这些规则都包含一个选择器\n\t2.计算声明的优先级\n\t\t先按来源排序\n\t\t在按选择器的特殊性来排序\n\t\t最终按浏览器从上到下，从左到右顺序筛选\n')])])]),n("h2",{attrs:{id:"自定义字体和图标"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自定义字体和图标"}},[t._v("#")]),t._v(" 自定义字体和图标")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v('自定义字体：\n\t@font-face {\n\t\t\tfont-family:"Damu";\n\t\t\tsrc: url(font/BAUHS93.TTF);\n\t\t}\n自定义图标：\n\t1.制定一套矢量图\n\t2.将矢量图与字符进行绑定\n\t3.使用工具或者站点生成一套字体\n\tfonts、index.html、style.css\n\t用link把css文件和html文件建立连接\n')])])])])}),[],!1,null,null,null);n.default=s.exports}}]);