(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{252:function(t,n,a){"use strict";a.r(n);var r=a(2),e=Object(r.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"新的ui方案"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#新的ui方案"}},[t._v("#")]),t._v(" 新的UI方案")]),t._v(" "),n("h2",{attrs:{id:"文本新增样式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#文本新增样式"}},[t._v("#")]),t._v(" 文本新增样式")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("opacity和rgba（）的相同与区别：\n\t相同点：两者都是用来设置元素的不透明度的。\n\t区别：opacity会继承父元素的opacity属性，而rgba设置的元素的后代元素不会继承不透明属性。\ntext-shadow：\n\t添加阴影文本，接受用逗号分隔的阴影列表\n\t每个阴影都来自元素的x和y偏移，迷糊半径和颜色的值描述\ntransition：\n\t转换属性，转换持续时间，转换定时功能和转换延迟的简写属性。\nfilter：\n\t滤镜属性，提供的图形特效，锐化或元素变色，通常被用于调整图片，背景和边界的渲染。\n-webkit-text-stroke：\n\t为文本指定了宽和颜色，只有webkit内核才支持。\ndirection：\n\t设置文本，表格列和水平溢出的方向。\n\tunicode-bidi和direction一起决定了如何处理文档中的双向文本，一般一起使用。\ntext-overflow：\n\t确定如何向用户发出未显示的溢出内容信号，可以被剪切，显示一个个省略号或显示一个自定义字符串。\n\t一般三个一起使用：可以文本超出显示省略号，包裹区域不能靠文本撑开。\n\t\twhite-space:nowrap; \n\t\toverflow:hidden; \n\t\ttext-overflow:ellipsis; \n")])])]),n("h2",{attrs:{id:"盒模型新增样式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#盒模型新增样式"}},[t._v("#")]),t._v(" 盒模型新增样式")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("正值往外放 负值往里收\n阴影：\nbox-shadow：默认值为none，不可继承\n\t* 以逗号分割列表来描述一个或多个阴影效果。\n\t* 如果元素同时设置了border-radius,阴影也会有圆角效果。\n\t* 多个阴影时和多个text-shadows规则相同（第一个阴影在最上面）\n\t* 属性值：\n\t\t* inset：默认阴影在边框外。使用inset后，阴影在边框内\n\t\t* <offset-x> 设置水平偏移量，如果是负值则阴影位于元素左边\n\t\t* <offset-y> 设置垂直偏移量，如果是负值则阴影位于元素上面\n\t\t* <blur-radius> 值越大，模糊面积越大，阴影就越来越淡\n\t\t* <spread-radius> 取正值时，阴影扩大；取负值时，阴影收缩，默认为0\nbox-shadow（盒子阴影）与text-shadow（文字阴影）相比：\n\t1.增加了inset 内阴影，阴影在边框内\n\t2.增加一个值<spread-radius>，阴影大小\n\n倒影：\n -wibkit-box-reflect：默认值为none 不可继承\n\t* 设置元素的倒影\n\t* above/below/left/right + 图片间距\n\t* 属性值：（必须是123的顺序）\n\t\t* 倒影的方向：above,below,right,left\n\t\t* 倒影的距离：长度单位\n\t\t* 渐变：**\n\nresize: 默认值为none ,不可继承\n\t* 允许你控制一个元素的可调整大小性（一定要配合overflow:auto来使用）\n\t* 属性值：\n\t\t* none：元素不能被用户缩放\n\t\t* both：允许用户在水平和垂直方向上调整元素的大小\n\t\t* horizontal允许用户在水平方向上调整元素的大小\n\t\t* vertical：允许用户在垂直方向上调整元素的大小\n\nbox-sizing：默认值为content-box，不可继承\n\t* 用于更改用于计算元素宽度和高度的默认的 CSS 盒子模型。\n\t* 属性值：\n\t\t* content-box:标准盒子模型，width和height宽和高只包括内容的宽和高，不包括border，padding，margin\n\t\t* 尺寸计算：\n\t\t\twidth = 内容的宽度\n\t\t\theight - 内容的高度\n\t\t* border-box:width和height包括内容，内边距和边框，但不包括外边距。\n\t\t* 尺寸计算：\n\t\t\twidth：border+padding+内容的width\n\t\t\theight：border+padding+内容的height\n")])])]),n("h2",{attrs:{id:"新增ui样式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#新增ui样式"}},[t._v("#")]),t._v(" 新增UI样式")]),t._v(" "),n("h3",{attrs:{id:"圆角"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#圆角"}},[t._v("#")]),t._v(" 圆角")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("* css3圆角比传统圆角的优点：\n\t1.减少维护的工作量\n\t2.提高网页性能\n\t3.增加视觉可靠性\n* border-radius：默认值为0,不可继承属性\n\t* 用来设置边框圆角。\n\t* 当使用一个半径时确定一个图形，当使用两个半径时确定一个椭圆，这个圆与边框的交集形成圆角效果\n\t* 固定的值：\n\t\t固定的px值定义圆形半径或椭圆的半长轴，半短轴，不能用负值。\n\t* 百分比的值（在移动端5之前不支持）：\n\t\t使用百分比定义圆形半径或椭圆的半长轴，半短轴。\n\t\t水平半轴相对于盒模型的宽度，垂直半轴相对于盒模型的高度，不能用负值。\n")])])]),n("h3",{attrs:{id:"边框图片"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#边框图片"}},[t._v("#")]),t._v(" 边框图片")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("border-image\n\t* 属性允许在元素的边框上绘制图像\n\t* 使用border-image时，将会替换掉border-style属性所设置的边框样式\nborder-image默认值：不可继承\n\t* border-image-source: none\n\t* border-image-slice: 100%\n\t* border-image-width: 1\n\t* border-image-outset: none\n\t* border-image-repeat: stretch\n\nborder-image-source:默认值为none，不可继承\n\t* 用一张图片改变边框样式\n\t* 如果只为none，则仍然使用border-style定义的样式\nborder-image-slice:默认值为100%，不可继承\n\t* 会将border-image-source的图片分割成9个区域：四角，四边及中心区域\n\t* 值的百分比参照于image本身。\nborder-image-repeat:默认值为stretch，不可继承\n\t* 定义图片填充边框\n\t* 或为单个值，设置所有的边框；或为两个值，分别设置水平与垂直的边框。\n\t* 属性值：\n\t\t* stretch：拉伸\n\t\t* repeat，round：平铺\nborder-image-width:默认值为1，不可继承\n\t* 定义图像边框宽度\nborder-image-outset:默认值为0，不可继承\n\t* 定义边框图像可超出边框盒的大小\n\t* 正值：可超出边框盒的大小\n")])])]),n("h3",{attrs:{id:"背景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[t._v("#")]),t._v(" 背景")]),t._v(" "),n("h4",{attrs:{id:"css2-0"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#css2-0"}},[t._v("#")]),t._v(" css2.0")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("background-color： 默认值为transparent，不可继承\n\t* 设置背景颜色\nbackground-image： 默认值为none，不可继承\n\t* 用于为一个元素设置一个或多个背景图像，先指定的覆盖后指定的\n\t* background-color会在images之下进行绘制，边框和内容会在image之上进行绘制\nbackground-repeat: 默认值为repeat，不可继承\n\t* 定义背景图像的重复方式\n\t* 背景图像可以沿着水平轴，垂直抽，两个轴重复，或者根本不重复\n\t* 属性值：\n\t\t* repeat-x：水平铺\n\t\t* repeat-y：垂直铺\n\t\t* repeat：两个轴重复铺\n\t\t* no-repeat：两个轴不重复铺\nbackground-position: 默认值为0% 0%，不可继承\n\t* 指定背景位置的初始位置\n\t* 属性值：\n\t\t* 百分比：参照尺寸为背景图片定位区域的大小减去背景图片的大小\n\t\t\t* 第一个值：元素在水平方向的位移\n\t\t\t* 第二个值; 元素在垂直方向的位移\nbackground-attachment: 默认值为scroll，不可继承\n\t* 决定背景是在视口中固定的还是随包含它的区块滚动的。\n\t* 属性值：\n\t\t* fixed：表示背景相对于视口固定，背景不会随着元素的内容滚动\n\t\t* scroll：表示背景相对于元素本身固定，而不随着它的内容滚动\n\n\t默认值：不可继承\n\tbackground-color： transparent \n\tbackground-image： none \n\tbackground-repeat：repeat\n\tbackground-position:： 0% 0%\n\tbackground-attachment： scroll\n")])])]),n("h4",{attrs:{id:"css3-0"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#css3-0"}},[t._v("#")]),t._v(" css3.0")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("默认情况下背景图片是从padding-box开始绘制，从border-box开始裁剪\n\nbackgroud-origin:\n\t* 设置背景的渲染的起始位置\n\t* 属性值：\n\t\t* border=box：背景是相对于边框的位置\n\t\t* padding-box：背景是相对于填充框定位的\n\t\t* content-box：背景是相对于内容框定位的\nbackgroud-clip: \n\t* 设置背景裁剪位置\n\t* -webkit-background-clip:text,只裁剪字体，写在background属性下面，否则clip不生效\nbackground-size: 默认值为auto auto，不可继承\n\t* 设置背景图片大小\n\t* 属性值：\n\t\t* 百分比：指定背景图片相对背景区的百分比，背景区由background-origin设置，默认为盒模型的内容区与内边距\n\t\t* auto：以背景图片的比例缩放背景图片\n\t* 注意：\n\t\t* 单值时，这个值指定图片的宽度，图片的高度隐式的为auto\n\t\t* 两个值：第一个值指定图片的宽度，第二个值指定图片的高度\nbackgroud: \n\t* 用来集中设置各种背景属性，可以设置一个或多个属性\n\tbackground默认值：与顺序无关，不可继承\n\t\t* background-image: none\n\t\t* background-position: 0% 0%\n\t\t* background-size: auto auto\n\t\t* background-repeat: repeat\n\t\t* background-origin: padding-box\n\t\t* background-clip: border-box\n\t\t* background-attachment: scroll\n\t\t* background-color: transparent\n")])])]),n("h3",{attrs:{id:"渐变"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#渐变"}},[t._v("#")]),t._v(" 渐变")]),t._v(" "),n("h4",{attrs:{id:"线性渐变"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#线性渐变"}},[t._v("#")]),t._v(" 线性渐变：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("需要设置一个起始点和一个方向（指定为一个角度），还要定义终止色。\n终止色就是你想让浏览器去平滑的过渡过去，并且你指定为两种，当然也会可以指定更多的颜色去创建复杂的渐变效果。\n\n默认方向：从上到下发生渐变\n\t* linear-geadient（color，color）；\n可以改变渐变方向：（top bottom left right）\n\t* linear-geadient（to 结束方向，color，color）；\n使用角度：\n\t* linear-geadient（角度（deg），color，color）；\n颜色节点的分布（第一个不写0%，第二个不写100%）\n\t* linear-gradient（color 长度或者百分比，color 长度或者百分比）\n重复渐变：\n\t* repeating-linear-geadient(角度deg，color 百分比，color 百分比)\n")])])]),n("h4",{attrs:{id:"径向渐变"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#径向渐变"}},[t._v("#")]),t._v(" 径向渐变")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("radial-gradient()函数创建一个<image>，用来展示由原点（渐变中心）辐射开的颜色渐变。\n默认均匀分布：\n\tradial-gradient（color，color）\n不均匀分布\n\tradial-gradient（color %，color %）\n改变渐变的形状\n\tradial-gradient（circle，color，color）\n\t\tcircle：圆\n\t\tellipse：默认为椭圆\n渐变形状的大小\n\tradial-gradient（closest-corner circle，color，color）\n\t\t* closest-side: 最近边\n\t\t* farthest-side：最远边\n\t\t* closest-conner: 最近角\n\t\t* farthest-corner: 最远角（默认值）\n改变圆心\n\tradial-gredient(closest-conner circle at px px,color,color)\n")])])])])}),[],!1,null,null,null);n.default=e.exports}}]);