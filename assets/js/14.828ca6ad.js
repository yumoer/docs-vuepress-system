(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{235:function(t,n,a){"use strict";a.r(n);var e=a(2),s=Object(e.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"响应式布局核心-css3媒体查询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#响应式布局核心-css3媒体查询"}},[t._v("#")]),t._v(" 响应式布局核心 - css3媒体查询")]),t._v(" "),n("h3",{attrs:{id:"操作符-关键字-only-and-or-not"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#操作符-关键字-only-and-or-not"}},[t._v("#")]),t._v(" 操作符（关键字） (only,and,(，or),not)")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("* and：代表‘与’的意思，一般用and来连接媒体类型的媒体属性\n\t* 语法：@media 类型 and （前缀-属性：属性值）操作符（前缀-属性：属性值）{}；\n\t* 连接媒体属性 、连接媒体类型\n   \t* 对于所有的连接选项都要匹配成功才能应用规则\n*，(or) : 代表‘或’的意思，\n   \t* 对于所有的连接选项只要匹配成功一个就能应用规则\n   \t* 语法：@media only 类型 and (属性:属性值) 操作符 (-属性:属性值) {}\n   \t\n* only：和浏览器兼容性有关\n\t* 老版本的浏览器只支持媒体类型，不支持带媒体属性的查询\n\t\t* 语法 ：@media only（只有） 类型 and (属性:属性值) 操作符 (-属性:属性值) \n   \t\t* 防止老旧的浏览器  不支持带媒体属性的查询而应用到给定的样式.\n   \t\t\t@media only screen and (min-width:800px ){\n   \t\t\t\t\t\t\t\t规则；\n   \t\t\t\t\t\t\t\t规则\n   \t\t\t}\n   \t\t\t@media  screen and (min-width:800px ){\n   \t\t\t\t\t\t\t\t规则；\n   \t\t\t\t\t\t\t\t规则\n   \t\t\t}\n   \t\t\t在老款的浏览器下\n   \t\t\t\t@media only    ---\x3e    因为没有only这种设备 规则被忽略\n   \t\t\t\t@media screen ---\x3e   因为有screen这种设备而且老浏览器会忽略带媒体属性的查询\n   \t\t\t\n   \t\t\t建议在每次抒写media query的时候带上only\n   \t\t\n* not：取反\n\t* 语法：@media not（除了） 类型 and (属性:属性值) 操作符 (-属性:属性值)\n")])])]),n("h3",{attrs:{id:"媒体类型-写在css样式下面"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#媒体类型-写在css样式下面"}},[t._v("#")]),t._v(" 媒体类型（写在css样式下面）")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("语法：@media 类型 {}\n   all - 所有媒体（默认值）\n   screen - 彩色屏幕\n   print - 打印预览\n   \n   projection - 手持设备\n   tv - 电视\n   braille - 盲文触觉设备\n   embossed - 盲文打印机\n   speech - “听觉”类似的媒体设备\n   tty - 不适用像素的设备\n")])])]),n("h3",{attrs:{id:"媒体属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#媒体属性"}},[t._v("#")]),t._v(" 媒体属性")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("语法：@media 类型 and （前缀-属性：属性值）{}\n\t* 属性：\n\t\t* width（可加max min前缀） - 浏览器的窗口宽度\n\t\t* height（可加max min前缀） - 浏览器的窗口高度\n\t\t* device-width（可加max min前缀） - 设备像素\n\t\t\t* pc端：分辨率\n\t\t\t* 移动端：具体看机器的参数 \n\t\t* device-pixel-ratio：（必须加-webkit，可加max min前缀） - 设备像素比\n\t\t\t* pc端：1\n\t\t\t* 移动端：具体看机器参数\n\t\t* orientation：横竖屏切换\n\t\t\t* 属性值\n\t\t\t\t* portrait - 竖屏\n\t\t\t\t* landscape - 横屏\n")])])]),n("h2",{attrs:{id:"栏目布局"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#栏目布局"}},[t._v("#")]),t._v(" 栏目布局")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("column-width：栏目宽度\ncolumn-count：栏目列数\ncolimn-gap：栏目字体间距\ncolumn-rule：在列中间绘制中线\n")])])]),n("h2",{attrs:{id:"规范"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#规范"}},[t._v("#")]),t._v(" 规范")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("HTML5：是一个强大的技术集（html5~html+css+js）\nCSS3：是html5的一部分，而且现代前端中已经没有版本的概念，都是级别\nECMAScript:现在的版本是ES5，后面还有ES6,ES7\nDOM:node -Element - HtmlElement - HtmlstyleElement \nBOM:（没有规范：window）\n")])])])])}),[],!1,null,null,null);n.default=s.exports}}]);