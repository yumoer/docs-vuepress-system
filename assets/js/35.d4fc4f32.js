(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{257:function(t,n,e){"use strict";e.r(n);var a=e(2),l=Object(a.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"flex"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#flex"}},[t._v("#")]),t._v(" flex")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("flex不等同于浮动\n基础：\n\t* 什么是容器，什么是项目，什么是主轴，什么是侧轴？\n\t* 项目永远在主轴的正方向上排列\n\t* flex分新旧两个版本\n\t\t* -webkit-box\n\t\t* -webkit-flex/flex\n注意：\n\t* 新版本的flex要比老版本的flex强大很多，有必要学习老版本的flex？\n\t\t* 移动端开发者必须要关注老版本的flex\n\t\t\t* 因为很多移动端设备内核低于老版本的flex\n\t\t* 老版本的box通过两个属性四个属性值控制主轴的位置和方向\n\t\t* 新版本的flex通过一个属性四个属性值控制主轴的位置和方向\n")])])]),n("h3",{attrs:{id:"新版flex"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#新版flex"}},[t._v("#")]),t._v(" 新版flex")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("容器的布局方向和排列方式\n\t* flex-direction - 控制主轴的x轴和y轴的方向\n\t\t* 属性值：\n\t\t\t* row - x轴的正方向（从左往右的x轴）\n\t\t\t* row-reverse - x轴的反方向（从右往左的x轴）\n\t\t\t* column - y轴的正方向（从上往下的y轴）\n\t\t\t* column-reverse - y轴的反方向（从下往上的y轴）\n富裕空间管理：只决定富裕空间的位置，不会给项目区分配空间\n\t* justify-content:主轴\n\t\t* 属性值\n\t\t\t* flex-start - 在主轴的正方向\n\t\t\t* flex-end - 在主轴的反方向\n\t\t\t* center - 在主轴的两边\n\t\t\t* space-between - 在项目之间\n\t\t\t* space-around - 在项目两边\n\t* align-items:侧轴\n\t\t* 属性值：\n\t\t\t* flex-start - 在侧轴的正方向\n\t\t\t* flex-end - 在侧轴的反方向\n\t\t\t* center - 在侧轴的两边\n\t\t\t* baseline - 按基线对齐\n\t\t\t* stretch - 默认值，等高布局（没有高度的情况下）\n弹性空间管理：\n\t* flex-grow：n \n\t\t* 默认值为0，弹性因子\n")])])]),n("h4",{attrs:{id:"flex新增属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#flex新增属性"}},[t._v("#")]),t._v(" flex新增属性")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("容器新增：\n\t* flex-wrap：nowrap\n\t\t* 指定flex元素单行显示还是多行显示\n\t\t* 属性值\n\t\t\t* nowrap - 默认值，不换行\n\t\t\t* wrap - 多行显示\n\t\t\t* wrap-reverse - 反向多行显示\n\t* flex-flow:\n\t\t* 是flex-direction和flex-wrap的简写\n\t\t\t* 属性值\n\t\t\t\t* direction wrap - 一起使用\n\t* align-content：\n\t\t* 多行/多列时恻轴富裕空间的管理（把多行/多列看作一个整体）\n\t\t* 属性值\n\t\t\t* flex-strat - 在侧轴的下边\n\t\t\t* flex-end - 在侧轴的上边\n\t\t\t* center - 在恻轴的中间\n\t\t\t* space-between - 在项目之间\n\t\t\t* space-around - 在项目两边\n\t\t\t* space-evently - 在项目中轴线两侧\n\t\t\t* stretch - 默认值\n\t\n项目新增\n\t* order：n\n\t\t* 项目的值越小，排名越靠前\n\t* align-self:\n\t\t* 控制一个项目的方向\n\t\t* 属性值\n\t\t\t* flex-start\n\t\t\t* flex-end\n\t\t\t* center\n\t* flex-basis:auto\n\t\t* 设置各项目的宽度\n\t* flex-grow：0\n\t\t* 默认值为0，相对拉伸对象的宽度\n\t\t* 可用空间 = （容器大小 - 所有相邻项目flex-basis的总和）\n\t\t* 可扩展空间 = （可用空间/所有相邻项目flex-grow的总和）\n\t\t* 每项伸缩大小 = （伸缩基准值flex-basis + (可扩展空间*flex-flow值)）\n\t* flex-shrink:1\n\t\t* 默认值为1，相对压缩对象的宽度 \n\t\t* 只有在flex-wrap：nowrap时才使用\n\t\t* 计算收缩因子与基准值乘的总和\n\t\t\t* var a = 每一项flex - shrink*flex-basis之和\n\t\t* 计算收缩因数\n\t\t\t* 收缩因数 = （项目的收缩因子*项目基准值）/第一步计算总和\n\t\t\t\t* var b = （flex-shrink*flex-basis）/a\n\t\t* 移除空间的计算\n\t\t\t* 移除空间 = 项目收缩因数 * 负溢出的空间\n\t\t\t\t* var c = b * 溢出的空间\n\t* flex简写属性\n\t\tflex：1（flex-grow:1;flex-shrink:1;flex-basis:0）\n")])])]),n("h3",{attrs:{id:"老版flex"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#老版flex"}},[t._v("#")]),t._v(" 老版flex")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("容器的布局方向\n\t* -wibkit-box-orient：horizontal/vertical - 控制主轴和侧轴\n\t* 属性值\n\t\t* horizonal：x轴\n\t\t* vertical：y轴\n容器的排列方向\n\t* -webkit-box-direction:属性值 - 控制主轴的方向\n\t* 属性值\n\t\t* normal：正方向（从左到右）\n\t\t* reverse：反方向（从右到左）\n富裕空间管理：只决定富裕空间的位置，不会给项目区分配空间\n\t-webkit-box-pack : 属性值 - 主轴\n\t\t* 属性值\n\t\t\t* strat - 在右边（X）/下边（Y）\n\t\t\t* end - 在左边（X）/上边（Y）\n\t\t\t* center - 在两边\n\t\t\t* justity - 在项目之间\n富裕空间管理\n\t* -webkit-box-align:属性值 - 测轴\n\t\t* 属性值\n\t\t\t* strat - 在右边（X）/下边（Y）\n\t\t\t* end - 在左边（X）/上边（Y）\n\t\t\t* center - 在两边\n项目的弹性空间管理\n\t* -webkit-box-flex : 0  \n\t* 默认值为0，弹性因子\n")])])]),n("h2",{attrs:{id:"侧轴富裕空间的管理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#侧轴富裕空间的管理"}},[t._v("#")]),t._v(" 侧轴富裕空间的管理")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("单行单列\n\talign-items\n\talign-self（优先级高）\n多行多列\n\talign-content\n")])])])])}),[],!1,null,null,null);n.default=l.exports}}]);