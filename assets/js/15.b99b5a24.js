(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{236:function(t,n,s){"use strict";s.r(n);var e=s(2),i=Object(e.a)({},(function(){var t=this._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("h2",{attrs:{id:"过渡-transition-属性-周期-运动形式-延迟"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#过渡-transition-属性-周期-运动形式-延迟"}},[this._v("#")]),this._v(" 过渡 - transition(属性，周期，运动形式，延迟)")]),this._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[this._v("transition-property:默认值为all\n\t* 指定应用过渡属性的名称\n\t* 属性值：\n\t\t* none：没有过渡动画\n\t\t* all：所有可被动画的属性都表现出过渡动画\n\t\t* IDENT：属性名称（可以指定多个property）\ntransition-duration：默认值为0s，表示不出现过渡动画\n\t* 属性以秒和毫秒为单位指定过渡动画所需的时间\n\t* 可以指定多个时长，每个时长都应用到由transition-property指定的对应属性中\n\t* 当指定时长个数小于属性个数，时长列表会重复\n\t* 当指定时长列表更长，多余的就会被裁剪，属性列表保持不变\n\t* 属性值：\n\t\t* 以毫秒或秒为单位的数值\n\t\t* <time> 类型。表示过渡属性从旧的值转变到新的值所需要的时间\n\t\t* 如果时长为0s，表示不会呈现过渡动画，属性会瞬间完成转变\n\t\t* 不接受负值，一定要加单位（s或ms）\ntransition-timing-function:默认值为ease\n\t* 描述变化速度的运动形式可以改变\n\t* 可以设置多个值，通过property属性给每个css属性应用相应的值\n\t* 如果值的个数比主列表中数量少，缺少的值被设置为初始值（ease）\n\t* 如果值比主列表多，会被裁剪至合适的大小，声明的css属性都是有效的。\n\t* 属性值：\n        * ease：（加速然后减速）默认值\n     \t* linear：（匀速）\n     \t* ease-in：(加速)\n     \t* ease-out：（减速）\n     \t* ease-in-out：（加速然后减速）\n     \t* cubic-bezier： 贝塞尔曲线(0.42, 0, 0.58, 1.0)\n     \t* step-start：等同于steps(1,start)\n          \tstep-end：等同于steps(1,end)\n           \tsteps(<integer>,[,[start|end]]?)\n                  第一个参数：必须为正整数，指定函数的步数\n                  第二个参数：指定每一步的值发生变化的时间点（默认值end）\ntransition-delay:默认值为0s\n\t* 规定了在过渡效果开始作用之前需要等待的时间\n\t* 可以指定多个延长时间，每个延迟将会分别作用于指定的css属性\n\t* 当指定的时长个数小于属性个数，那么时长列表会重复\n\t* 当时长列表更长，那么列表会被裁减，属性列表都保持不变。\n\t* 属性值：\n\t\t* 值以秒（s）或毫秒（ms）为单位，表明动画过滤效果将在何时开始\n\t\t* 取值为正时，会延迟一段时间来响应过渡效果\n\t\t* 取值为负时会导致过渡立即开始。\n")])])])])}),[],!1,null,null,null);n.default=i.exports}}]);