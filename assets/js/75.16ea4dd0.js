(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{297:function(t,a,s){"use strict";s.r(a);var r=s(2),n=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("JSON 全称为 JavaScript Object Notation，译为 JavaScript 对象表示法。是一种轻量级的数据交换格式。")]),t._v(" "),a("p",[t._v("官网地址： "),a("a",{attrs:{href:"http://www.json.org/json-zh.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.json.org/json-zh.html"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("JSON 易于开发者阅读和编写，也易于计算机解析和生成。它基于JavaScript Programming Language，Standard ECMA-262 3rd Edition - December 1999的一个子集。")]),t._v(" "),a("p",[t._v("JSON 采用完全独立于语言的文本格式，被 Java、C#、C++、PHP、OC 等几乎所有主流语言所支持。")]),t._v(" "),a("p",[t._v("JSON 作为一种轻量级的文本数据交换格式，已被广泛使用于存储和交换文本数据领域。")]),t._v(" "),a("h2",{attrs:{id:"语法规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法规则"}},[t._v("#")]),t._v(" 语法规则")]),t._v(" "),a("p",[t._v("JSON 构建于两种语法结构:")]),t._v(" "),a("ul",[a("li",[t._v("“名称 / 值”对的集合。在 JavaScript 中被解释为 对象。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"16.png",alt:""}})]),t._v(" "),a("ul",[a("li",[t._v("值的有序列表。在 JavaScript 中被解释为 数组。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"17.png",alt:""}})]),t._v(" "),a("p",[t._v("JSON 存储数据的类型可以是字符串（string）、数值(number)、true、false、 null、对象（object）或者数组（array）。这些结构可以嵌套。")]),t._v(" "),a("p",[a("img",{attrs:{src:"18.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"javascript-中的-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-中的-json"}},[t._v("#")]),t._v(" JavaScript 中的 JSON")]),t._v(" "),a("p",[t._v("JavaScript 中使用字符串（String）来表示 JSON 的两种结构。")]),t._v(" "),a("ul",[a("li",[t._v("“名称 / 值”对的集合。")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" jsonTxt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ' "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n\t"),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"ename"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Tom"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n\t"),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"salary"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3500")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"isMarried"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" '"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("值的有序列表。")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" jsonTxt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\' [ "Tom", "Mary", "John" ] \'')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[a("strong",[t._v("值得注意的是:")]),t._v(" 字符串必须用双引号括起来。")])]),t._v(" "),a("h2",{attrs:{id:"json-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#json-对象"}},[t._v("#")]),t._v(" JSON 对象")]),t._v(" "),a("p",[t._v("JavaScript 提供了 JSON 对象，该对象具有两种方式:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("方法名")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("JSON.parse()")]),t._v(" "),a("td",[t._v("解析JSON字符串，可以选择改变前面解析后的值及其属性，然后返回解析的值。")])]),t._v(" "),a("tr",[a("td",[t._v("JSON.stringify()")]),t._v(" "),a("td",[t._v("返回指定值的 JSON 字符串，可以自定义只包含某些特定的属性或替换属性值。")])])])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("值得注意的是:")]),t._v(" IE 8 版本之前（包含 8 版本）并不支持 JSON 对象。必须下载 json2.js 或 json3.js 工具解决此问题。")])]),t._v(" "),a("ul",[a("li",[t._v("json2.js 的下载地址："),a("a",{attrs:{href:"https://github.com/douglascrockford/JSON-js",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/douglascrockford/JSON-js"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("json3.js 的下载地址："),a("a",{attrs:{href:"https://bestiejs.github.com/json3",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://bestiejs.github.com/json3"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"json-转换为-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#json-转换为-javascript"}},[t._v("#")]),t._v(" JSON 转换为 JavaScript")]),t._v(" "),a("p",[t._v("将 JSON 转换为 JavaScript 具有两种方式:")]),t._v(" "),a("ul",[a("li",[t._v("利用 JavaScript 中的 eval() 函数。该函数用于执行以字符串（String）形式出现的JavaScript代码。")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" jsonTxt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\' { "x": 60, "y": 30 } \'')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" jsObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"("')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" jsonTxt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('")"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[a("strong",[t._v("值得注意的是:")])]),t._v(" "),a("ul",[a("li",[t._v("根据 eval() 的严格语法要求，其接收的参数只能是 string 类型，而不能是 String 类型！")]),t._v(" "),a("li",[t._v("使用 eval() 将 JSON 字符串解析为 JavaScript 对象时，若不添加左右的小括号，会抛出 SyntaxError。")])])]),t._v(" "),a("ul",[a("li",[t._v("利用 JavaScript 中 JSON 对象的 parse() 方法。")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" jsonTxt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\' { "x": 60, "y": 30 } \'')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" jsObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" jsonTxt "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"javascript-转换为-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-转换为-json"}},[t._v("#")]),t._v(" JavaScript 转换为 JSON")]),t._v(" "),a("p",[t._v("利用 JavaScript 中 JSON 对象的 stringify() 方法将 JavaScript 转换为 JSON。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" jsObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'x'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'y'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" jsObj "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);