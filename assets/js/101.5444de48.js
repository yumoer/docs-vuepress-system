(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{322:function(t,a,s){"use strict";s.r(a);var r=s(2),l=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("js中的变量是没有类型的，只有值才持有类型")])]),t._v(" "),a("li",[a("p",[t._v("js中所有的传递都是值传递，没有引用传递")])]),t._v(" "),a("li",[a("p",[t._v("引用数据类型传的是基地址值")])]),t._v(" "),a("li",[a("p",[t._v("指向的对象相同时，修改后的值就是最后的值")])]),t._v(" "),a("li",[a("p",[t._v("指向的对象不同时，修改后的值看最后要的是哪个值")])]),t._v(" "),a("li",[a("p",[t._v("基本数据类型总是通过值复制来完成赋值/传递")])]),t._v(" "),a("li",[a("p",[t._v("引用数据类型总是通过引用复制来完成赋值/传递")]),t._v(" "),a("ul",[a("li",[t._v("注意引用指向的是值而非变量，所以一个引用无法更改另一个引用的指向，但是可以更改不同变量共同指向的值")])])])]),t._v(" "),a("h3",{attrs:{id:"数组的一些问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组的一些问题"}},[t._v("#")]),t._v(" 数组的一些问题")]),t._v(" "),a("ul",[a("li",[t._v("函数在js中是一等公民\n"),a("ul",[a("li",[t._v("在js中没有构造函数，只有函数的构造调用\n"),a("ul",[a("li",[t._v("fn（） -  普通函数")]),t._v(" "),a("li",[t._v("new Fn（） - 构造函数")])])]),t._v(" "),a("li",[t._v("实例：new 构造函数")])])])]),t._v(" "),a("h3",{attrs:{id:"稀疏数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#稀疏数组"}},[t._v("#")]),t._v(" 稀疏数组")]),t._v(" "),a("h3",{attrs:{id:"伪数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#伪数组"}},[t._v("#")]),t._v(" 伪数组")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("具有length属性 以数字作为属性名的对象  -  伪数组\n\n伪数组转为真数组\n\t调用slice（）方法的this变成伪数组\n\tvar arr = Array.prototype.slice.call( 伪数组 );\n")])])]),a("h3",{attrs:{id:"数组去重"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组去重"}},[t._v("#")]),t._v(" 数组去重")])])}),[],!1,null,null,null);a.default=l.exports}}]);